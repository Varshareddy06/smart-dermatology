{"ast":null,"code":"import React, { useMemo } from 'react';\n\n/**\n * Custom hook to generate a Pollinations image URL based on the given prompt and options.\n * \n * @param {string} prompt - The prompt to generate the image.\n * @param {Object} [options] - Optional parameters for image generation.\n * @param {number} [options.width=1024] - The width of the generated image.\n * @param {number} [options.height=1024] - The height of the generated image.\n * @param {string} [options.model='turbo'] - The model to use for image generation.\n * @param {number} [options.seed=-1] - The seed for random image generation.\n * @param {boolean} [options.nologo=true] - Whether to generate the image without a logo.\n * @param {boolean} [options.enhance=false] - Whether to enhance the generated image.\n * @returns {string} - The URL of the generated image.\n */\nconst usePollinationsImage = (prompt, options = {}) => {\n  const {\n    width = 1024,\n    height = 1024,\n    model = 'flux',\n    seed = 42,\n    nologo = true,\n    enhance = false\n  } = options;\n  const imageUrl = useMemo(() => {\n    const params = new URLSearchParams({\n      width,\n      height,\n      model,\n      seed,\n      nologo,\n      enhance\n    });\n    return `https://pollinations.ai/p/${encodeURIComponent(prompt)}?${params.toString()}`;\n  }, [prompt, width, height, model, seed, nologo, enhance]);\n  return imageUrl;\n};\nexport default usePollinationsImage;","map":{"version":3,"names":["React","useMemo","usePollinationsImage","prompt","options","width","height","model","seed","nologo","enhance","imageUrl","params","URLSearchParams","encodeURIComponent","toString"],"sources":["C:/Users/varsh/OneDrive/Desktop/71/skin/node_modules/@pollinations/react/src/hooks/usePollinationsImage.js"],"sourcesContent":["import React, { useMemo } from 'react';\n\n/**\n * Custom hook to generate a Pollinations image URL based on the given prompt and options.\n * \n * @param {string} prompt - The prompt to generate the image.\n * @param {Object} [options] - Optional parameters for image generation.\n * @param {number} [options.width=1024] - The width of the generated image.\n * @param {number} [options.height=1024] - The height of the generated image.\n * @param {string} [options.model='turbo'] - The model to use for image generation.\n * @param {number} [options.seed=-1] - The seed for random image generation.\n * @param {boolean} [options.nologo=true] - Whether to generate the image without a logo.\n * @param {boolean} [options.enhance=false] - Whether to enhance the generated image.\n * @returns {string} - The URL of the generated image.\n */\nconst usePollinationsImage = (prompt, options = {}) => {\n    const { width = 1024, height = 1024, model = 'flux', seed = 42, nologo = true, enhance = false } = options;\n\n    const imageUrl = useMemo(() => {\n        const params = new URLSearchParams({ width, height, model, seed, nologo, enhance });\n        return `https://pollinations.ai/p/${encodeURIComponent(prompt)}?${params.toString()}`;\n    }, [prompt, width, height, model, seed, nologo, enhance]);\n\n    return imageUrl;\n};\n\nexport default usePollinationsImage;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,oBAAoB,GAAGA,CAACC,MAAM,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EACnD,MAAM;IAAEC,KAAK,GAAG,IAAI;IAAEC,MAAM,GAAG,IAAI;IAAEC,KAAK,GAAG,MAAM;IAAEC,IAAI,GAAG,EAAE;IAAEC,MAAM,GAAG,IAAI;IAAEC,OAAO,GAAG;EAAM,CAAC,GAAGN,OAAO;EAE1G,MAAMO,QAAQ,GAAGV,OAAO,CAAC,MAAM;IAC3B,MAAMW,MAAM,GAAG,IAAIC,eAAe,CAAC;MAAER,KAAK;MAAEC,MAAM;MAAEC,KAAK;MAAEC,IAAI;MAAEC,MAAM;MAAEC;IAAQ,CAAC,CAAC;IACnF,OAAO,6BAA6BI,kBAAkB,CAACX,MAAM,CAAC,IAAIS,MAAM,CAACG,QAAQ,CAAC,CAAC,EAAE;EACzF,CAAC,EAAE,CAACZ,MAAM,EAAEE,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,MAAM,EAAEC,OAAO,CAAC,CAAC;EAEzD,OAAOC,QAAQ;AACnB,CAAC;AAED,eAAeT,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}