{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varsh\\\\OneDrive\\\\Desktop\\\\71\\\\skin\\\\src\\\\CausePrediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: {\n    textAlign: 'center',\n    padding: '20px',\n    fontFamily: 'Arial, sans-serif',\n    color: 'white',\n    backgroundImage: 'url(\"/1.jpg\")',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    minHeight: '100vh',\n    paddingTop: '80px' // Add padding to account for the fixed header\n  },\n  header: {\n    position: 'fixed',\n    // Make the header fixed\n    top: 0,\n    left: 0,\n    right: 0,\n    zIndex: 1000,\n    // Ensure it stays above other content\n    fontSize: '2rem',\n    fontWeight: 'bold',\n    color: '#61dafb',\n    background: 'rgba(0, 0, 0, 0.8)',\n    // Semi-transparent background\n    padding: '15px',\n    textAlign: 'center',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.5)'\n  }\n};\nfunction CausePrediction({\n  diseaseName\n}) {\n  _s();\n  const [response, setResponse] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Placeholder API call\n    const apiResponse = await new Promise(resolve => {\n      setTimeout(() => {\n        resolve({\n          json: () => Promise.resolve({\n            message: `Based on your answers, potential causes for ${diseaseName} may include environmental factors and genetic predisposition.`\n          })\n        });\n      }, 500);\n    });\n    const result = await apiResponse.json();\n    setResponse(result.message);\n  };\n  const specificQuestions = {\n    \"Tinea corporis (Ringworm)\": [\"Have you been in contact with someone who has ringworm?\", \"Have you been using public showers or locker rooms recently?\"],\n    \"Eczema\": [\"Have you been exposed to any known allergens or irritants?\", \"Is your skin often dry and itchy?\"],\n    \"Psoriasis\": [\"Have you experienced recent stress or illness?\", \"Do you have a family history of psoriasis?\"],\n    \"Acne\": [\"Have you been using any new skincare products or makeup?\", \"Do you have a diet high in sugary or processed foods?\"]\n    // Add more disease-specific questions here\n  };\n  const questions = specificQuestions[diseaseName] || [\"Have you noticed any recent changes in your skin?\", \"Do you have any known allergies?\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: styles.header,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cause Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Answer the following questions to help us predict potential causes of your skin condition, \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: diseaseName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 101\n      }, this), \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [questions[0], /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"question1\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [questions[1], /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"question2\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Prediction: \", response]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(CausePrediction, \"TM4HGnxieAxLTyBQJEA7E7LlHYI=\");\n_c = CausePrediction;\nexport default CausePrediction;\nvar _c;\n$RefreshReg$(_c, \"CausePrediction\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","styles","container","textAlign","padding","fontFamily","color","backgroundImage","backgroundSize","backgroundPosition","minHeight","paddingTop","header","position","top","left","right","zIndex","fontSize","fontWeight","background","boxShadow","CausePrediction","diseaseName","_s","response","setResponse","handleSubmit","e","preventDefault","apiResponse","Promise","resolve","setTimeout","json","message","result","specificQuestions","questions","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","required","_c","$RefreshReg$"],"sources":["C:/Users/varsh/OneDrive/Desktop/71/skin/src/CausePrediction.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    padding: '20px',\r\n    fontFamily: 'Arial, sans-serif',\r\n    color: 'white',\r\n    backgroundImage: 'url(\"/1.jpg\")',\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    minHeight: '100vh',\r\n    paddingTop: '80px', // Add padding to account for the fixed header\r\n  },\r\n  header: {\r\n    position: 'fixed', // Make the header fixed\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    zIndex: 1000, // Ensure it stays above other content\r\n    fontSize: '2rem',\r\n    fontWeight: 'bold',\r\n    color: '#61dafb',\r\n    background: 'rgba(0, 0, 0, 0.8)', // Semi-transparent background\r\n    padding: '15px',\r\n    textAlign: 'center',\r\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.5)',\r\n  },\r\n};\r\n\r\nfunction CausePrediction({ diseaseName }) {\r\n  const [response, setResponse] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Placeholder API call\r\n    const apiResponse = await new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          json: () =>\r\n            Promise.resolve({\r\n              message: `Based on your answers, potential causes for ${diseaseName} may include environmental factors and genetic predisposition.`,\r\n            }),\r\n        });\r\n      }, 500);\r\n    });\r\n\r\n    const result = await apiResponse.json();\r\n    setResponse(result.message);\r\n  };\r\n\r\n  const specificQuestions = {\r\n    \"Tinea corporis (Ringworm)\": [\r\n      \"Have you been in contact with someone who has ringworm?\",\r\n      \"Have you been using public showers or locker rooms recently?\",\r\n    ],\r\n    \"Eczema\": [\r\n      \"Have you been exposed to any known allergens or irritants?\",\r\n      \"Is your skin often dry and itchy?\",\r\n    ],\r\n    \"Psoriasis\": [\r\n      \"Have you experienced recent stress or illness?\",\r\n      \"Do you have a family history of psoriasis?\",\r\n    ],\r\n    \"Acne\": [\r\n      \"Have you been using any new skincare products or makeup?\",\r\n      \"Do you have a diet high in sugary or processed foods?\",\r\n    ],\r\n    // Add more disease-specific questions here\r\n  };\r\n\r\n  const questions = specificQuestions[diseaseName] || [\r\n    \"Have you noticed any recent changes in your skin?\",\r\n    \"Do you have any known allergies?\",\r\n  ];\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <header style={styles.header}>\r\n        <h2>Cause Prediction</h2>\r\n      </header>\r\n      <p>Answer the following questions to help us predict potential causes of your skin condition, <strong>{diseaseName}</strong>:</p>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          {questions[0]}\r\n          <input type=\"text\" name=\"question1\" required />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          {questions[1]}\r\n          <input type=\"text\" name=\"question2\" required />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      {response && <p>Prediction: {response}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CausePrediction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}