{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varsh\\\\OneDrive\\\\Desktop\\\\71\\\\skin\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleImageUpload = e => {\n    setImage(e.target.files[0]);\n  };\n  const analyzeImage = async () => {\n    if (!image) {\n      alert('Please upload an image first.');\n      return;\n    }\n    setLoading(true);\n\n    // Convert image to base64\n    const reader = new FileReader();\n    reader.onloadend = async () => {\n      const base64Image = reader.result.split(',')[1];\n\n      // Call Pollinations AI API\n      try {\n        const response = await fetch('https://text.pollinations.ai/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            messages: [{\n              role: 'user',\n              content: [{\n                type: 'text',\n                text: 'Analyze this skin condition image:'\n              }, {\n                type: 'image_url',\n                image_url: {\n                  url: `data:image/jpeg;base64,${base64Image}`\n                }\n              }]\n            }],\n            model: 'openai',\n            jsonMode: true,\n            private: true\n          })\n        });\n        const data = await response.json();\n        setResult(data.choices[0].message.content || 'No result found.');\n      } catch (error) {\n        setResult('Error analyzing the image. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    reader.readAsDataURL(image);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to Smart Dermatology\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload an image of your skin condition, and our model will predict the disease.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          analyzeImage();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? 'Analyzing...' : 'Upload and Analyze'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Analysis Result:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9ixWgAjtvtpN36yxv6hHqdEFJVE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","image","setImage","result","setResult","loading","setLoading","handleImageUpload","e","target","files","analyzeImage","alert","reader","FileReader","onloadend","base64Image","split","response","fetch","method","headers","body","JSON","stringify","messages","role","content","type","text","image_url","url","model","jsonMode","private","data","json","choices","message","error","readAsDataURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","preventDefault","accept","onChange","disabled","_c","$RefreshReg$"],"sources":["C:/Users/varsh/OneDrive/Desktop/71/skin/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [image, setImage] = useState(null);\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleImageUpload = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n  const analyzeImage = async () => {\n    if (!image) {\n      alert('Please upload an image first.');\n      return;\n    }\n\n    setLoading(true);\n\n    // Convert image to base64\n    const reader = new FileReader();\n    reader.onloadend = async () => {\n      const base64Image = reader.result.split(',')[1];\n\n      // Call Pollinations AI API\n      try {\n        const response = await fetch('https://text.pollinations.ai/', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            messages: [\n              {\n                role: 'user',\n                content: [\n                  { type: 'text', text: 'Analyze this skin condition image:' },\n                  { type: 'image_url', image_url: { url: `data:image/jpeg;base64,${base64Image}` } },\n                ],\n              },\n            ],\n            model: 'openai',\n            jsonMode: true,\n            private: true,\n          }),\n        });\n\n        const data = await response.json();\n        setResult(data.choices[0].message.content || 'No result found.');\n      } catch (error) {\n        setResult('Error analyzing the image. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    reader.readAsDataURL(image);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Welcome to Smart Dermatology</h2>\n        <p>Upload an image of your skin condition, and our model will predict the disease.</p>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            analyzeImage();\n          }}\n        >\n          <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\n          <button type=\"submit\" disabled={loading}>\n            {loading ? 'Analyzing...' : 'Upload and Analyze'}\n          </button>\n        </form>\n        {result && (\n          <div>\n            <h3>Analysis Result:</h3>\n            <p>{result}</p>\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}