{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varsh\\\\OneDrive\\\\Desktop\\\\71\\\\skin\\\\src\\\\components\\\\FoodRecommendation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleGenAI } from '@google/genai';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ai = new GoogleGenAI({\n  apiKey: process.env.REACT_APP_GOOGLE_GENAI_API_KEY\n});\nconst styles = {\n  container: {\n    textAlign: 'center',\n    padding: '20px',\n    fontFamily: 'Arial, sans-serif',\n    color: 'white',\n    backgroundImage: 'url(\"/1.jpg\")',\n    backgroundSize: 'auto',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'calc(100% - 150px) center',\n    backgroundColor: '#000000',\n    minHeight: '100vh',\n    paddingTop: '100px' // Adjust padding to account for the fixed header\n  },\n  content: {\n    background: 'rgba(0, 0, 0, 0.8)',\n    // Semi-transparent background\n    padding: '30px',\n    borderRadius: '15px',\n    boxShadow: '0 10px 20px rgba(0, 0, 0, 0.7)',\n    maxWidth: '600px',\n    margin: '20px auto',\n    textAlign: 'left'\n  },\n  title: {\n    fontSize: '2rem',\n    fontWeight: 'bold',\n    color: '#61dafb',\n    marginBottom: '20px',\n    textAlign: 'center'\n  },\n  list: {\n    textAlign: 'left',\n    margin: '20px 0',\n    paddingLeft: '20px',\n    color: '#ddd',\n    lineHeight: '1.6'\n  },\n  loading: {\n    fontSize: '1.2rem',\n    color: '#61dafb',\n    marginTop: '20px',\n    textAlign: 'center'\n  }\n};\nfunction FoodRecommendation({\n  diseaseName\n}) {\n  _s();\n  const [recommendations, setRecommendations] = useState({\n    bestFoods: [],\n    foodsToAvoid: []\n  });\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchRecommendations = async () => {\n      setLoading(true);\n      setRecommendations({\n        bestFoods: [],\n        foodsToAvoid: []\n      });\n      const prompt = `\n        Based on the disease \"${diseaseName}\", provide a list of:\n        1. Best foods to eat to help manage or improve the condition.\n        2. Foods to avoid that may worsen the condition.\n      `;\n      const models = ['gemini-2.5-flash-preview-04-17', 'gemini-2.0-flash', 'gemini-1.5'];\n      let modelIndex = 0;\n      while (modelIndex < models.length) {\n        try {\n          const result = await ai.models.generateContent({\n            model: models[modelIndex],\n            contents: [prompt],\n            config: {\n              maxOutputTokens: 300,\n              temperature: 0.7\n            }\n          });\n          if (result.text) {\n            const [bestFoods, foodsToAvoid] = result.text.split('\\n\\n').map(section => section.split('\\n').filter(item => item.trim() !== '').map(item => item.trim()));\n            setRecommendations({\n              bestFoods: bestFoods || [],\n              foodsToAvoid: foodsToAvoid || []\n            });\n            break;\n          }\n        } catch (error) {\n          console.error(`Error with model ${models[modelIndex]}:`, error.message);\n          if (modelIndex === models.length - 1) {\n            setRecommendations({\n              bestFoods: ['Failed to fetch recommendations. Please try again later.'],\n              foodsToAvoid: []\n            });\n          }\n        }\n        modelIndex++;\n      }\n      setLoading(false);\n    };\n    if (diseaseName) {\n      fetchRecommendations();\n    }\n  }, [diseaseName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: styles.title,\n        children: \"Food Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.loading,\n        children: \"Loading recommendations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Based on your skin condition, \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: diseaseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 46\n          }, this), \", here are some dietary recommendations:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Best Foods to Eat:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: styles.list,\n          children: recommendations.bestFoods.map((food, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: food\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Foods to Avoid:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: styles.list,\n          children: recommendations.foodsToAvoid.map((food, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: food\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(FoodRecommendation, \"i6b+8iyxJb+4R7VmNd5p2MPjANc=\");\n_c = FoodRecommendation;\nexport default FoodRecommendation;\nvar _c;\n$RefreshReg$(_c, \"FoodRecommendation\");","map":{"version":3,"names":["React","useState","useEffect","GoogleGenAI","jsxDEV","_jsxDEV","Fragment","_Fragment","ai","apiKey","process","env","REACT_APP_GOOGLE_GENAI_API_KEY","styles","container","textAlign","padding","fontFamily","color","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","backgroundColor","minHeight","paddingTop","content","background","borderRadius","boxShadow","maxWidth","margin","title","fontSize","fontWeight","marginBottom","list","paddingLeft","lineHeight","loading","marginTop","FoodRecommendation","diseaseName","_s","recommendations","setRecommendations","bestFoods","foodsToAvoid","setLoading","fetchRecommendations","prompt","models","modelIndex","length","result","generateContent","model","contents","config","maxOutputTokens","temperature","text","split","map","section","filter","item","trim","error","console","message","style","children","fileName","_jsxFileName","lineNumber","columnNumber","food","index","_c","$RefreshReg$"],"sources":["C:/Users/varsh/OneDrive/Desktop/71/skin/src/components/FoodRecommendation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleGenAI } from '@google/genai';\r\n\r\nconst ai = new GoogleGenAI({ apiKey: process.env.REACT_APP_GOOGLE_GENAI_API_KEY });\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    padding: '20px',\r\n    fontFamily: 'Arial, sans-serif',\r\n    color: 'white',\r\n    backgroundImage: 'url(\"/1.jpg\")',\r\n    backgroundSize: 'auto',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'calc(100% - 150px) center',\r\n    backgroundColor: '#000000',\r\n    minHeight: '100vh',\r\n    paddingTop: '100px', // Adjust padding to account for the fixed header\r\n  },\r\n  content: {\r\n    background: 'rgba(0, 0, 0, 0.8)', // Semi-transparent background\r\n    padding: '30px',\r\n    borderRadius: '15px',\r\n    boxShadow: '0 10px 20px rgba(0, 0, 0, 0.7)',\r\n    maxWidth: '600px',\r\n    margin: '20px auto',\r\n    textAlign: 'left',\r\n  },\r\n  title: {\r\n    fontSize: '2rem',\r\n    fontWeight: 'bold',\r\n    color: '#61dafb',\r\n    marginBottom: '20px',\r\n    textAlign: 'center',\r\n  },\r\n  list: {\r\n    textAlign: 'left',\r\n    margin: '20px 0',\r\n    paddingLeft: '20px',\r\n    color: '#ddd',\r\n    lineHeight: '1.6',\r\n  },\r\n  loading: {\r\n    fontSize: '1.2rem',\r\n    color: '#61dafb',\r\n    marginTop: '20px',\r\n    textAlign: 'center',\r\n  },\r\n};\r\n\r\nfunction FoodRecommendation({ diseaseName }) {\r\n  const [recommendations, setRecommendations] = useState({ bestFoods: [], foodsToAvoid: [] });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchRecommendations = async () => {\r\n      setLoading(true);\r\n      setRecommendations({ bestFoods: [], foodsToAvoid: [] });\r\n\r\n      const prompt = `\r\n        Based on the disease \"${diseaseName}\", provide a list of:\r\n        1. Best foods to eat to help manage or improve the condition.\r\n        2. Foods to avoid that may worsen the condition.\r\n      `;\r\n\r\n      const models = ['gemini-2.5-flash-preview-04-17', 'gemini-2.0-flash', 'gemini-1.5'];\r\n      let modelIndex = 0;\r\n\r\n      while (modelIndex < models.length) {\r\n        try {\r\n          const result = await ai.models.generateContent({\r\n            model: models[modelIndex],\r\n            contents: [prompt],\r\n            config: {\r\n              maxOutputTokens: 300,\r\n              temperature: 0.7,\r\n            },\r\n          });\r\n\r\n          if (result.text) {\r\n            const [bestFoods, foodsToAvoid] = result.text.split('\\n\\n').map((section) =>\r\n              section\r\n                .split('\\n')\r\n                .filter((item) => item.trim() !== '')\r\n                .map((item) => item.trim())\r\n            );\r\n\r\n            setRecommendations({\r\n              bestFoods: bestFoods || [],\r\n              foodsToAvoid: foodsToAvoid || [],\r\n            });\r\n            break;\r\n          }\r\n        } catch (error) {\r\n          console.error(`Error with model ${models[modelIndex]}:`, error.message);\r\n          if (modelIndex === models.length - 1) {\r\n            setRecommendations({\r\n              bestFoods: ['Failed to fetch recommendations. Please try again later.'],\r\n              foodsToAvoid: [],\r\n            });\r\n          }\r\n        }\r\n        modelIndex++;\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n\r\n    if (diseaseName) {\r\n      fetchRecommendations();\r\n    }\r\n  }, [diseaseName]);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <header>\r\n        {/* Header remains fixed */}\r\n      </header>\r\n      <div style={styles.content}>\r\n        <h2 style={styles.title}>Food Recommendations</h2>\r\n        {loading ? (\r\n          <p style={styles.loading}>Loading recommendations...</p>\r\n        ) : (\r\n          <>\r\n            <p>Based on your skin condition, <strong>{diseaseName}</strong>, here are some dietary recommendations:</p>\r\n            <h3>Best Foods to Eat:</h3>\r\n            <ul style={styles.list}>\r\n              {recommendations.bestFoods.map((food, index) => (\r\n                <li key={index}>{food}</li>\r\n              ))}\r\n            </ul>\r\n            <h3>Foods to Avoid:</h3>\r\n            <ul style={styles.list}>\r\n              {recommendations.foodsToAvoid.map((food, index) => (\r\n                <li key={index}>{food}</li>\r\n              ))}\r\n            </ul>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FoodRecommendation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}