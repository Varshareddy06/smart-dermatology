{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varsh\\\\OneDrive\\\\Desktop\\\\71\\\\skin\\\\src\\\\components\\\\CausePrediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleGenAI } from '@google/genai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ai = new GoogleGenAI({\n  apiKey: 'YOUR_API_KEY'\n}); // Replace with your actual API key\n\nconst styles = {\n  container: {\n    textAlign: 'center',\n    padding: '20px',\n    fontFamily: 'Arial, sans-serif',\n    color: 'white',\n    backgroundImage: 'url(\"/1.jpg\")',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    minHeight: '100vh',\n    paddingTop: '80px' // Add padding to account for the fixed header\n  },\n  header: {\n    position: 'fixed',\n    // Make the header fixed\n    top: 0,\n    left: 0,\n    right: 0,\n    zIndex: 1000,\n    // Ensure it stays above other content\n    fontSize: '2rem',\n    fontWeight: 'bold',\n    color: '#61dafb',\n    background: 'rgba(0, 0, 0, 0.8)',\n    // Semi-transparent background\n    padding: '15px',\n    textAlign: 'center',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.5)'\n  }\n};\nfunction CausePrediction({\n  diseaseName\n}) {\n  _s();\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setResponse(null);\n    const question1 = e.target.elements.question1.value;\n    const question2 = e.target.elements.question2.value;\n    const prompt = `\n      Disease: ${diseaseName}\n      Question 1: ${question1}\n      Question 2: ${question2}\n      Based on the above information, identify potential causes for the disease.\n    `;\n    try {\n      const result = await ai.models.generateContent({\n        model: 'gemini-1.5',\n        contents: [prompt]\n      });\n      if (result.text) {\n        setResponse(result.text);\n      } else {\n        setResponse('No potential causes identified. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error communicating with Gemini:', error);\n      setResponse('An error occurred while identifying potential causes. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const specificQuestions = {\n    \"Tinea corporis (Ringworm)\": [\"Have you been in contact with someone who has ringworm?\", \"Have you been using public showers or locker rooms recently?\"],\n    \"Eczema\": [\"Have you been exposed to any known allergens or irritants?\", \"Is your skin often dry and itchy?\"],\n    \"Psoriasis\": [\"Have you experienced recent stress or illness?\", \"Do you have a family history of psoriasis?\"],\n    \"Acne\": [\"Have you been using any new skincare products or makeup?\", \"Do you have a diet high in sugary or processed foods?\"]\n    // Add more disease-specific questions here\n  };\n  const questions = specificQuestions[diseaseName] || [\"Have you noticed any recent changes in your skin?\", \"Do you have any known allergies?\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: styles.header,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cause Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Answer the following questions to help us predict potential causes of your skin condition, \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: diseaseName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 101\n      }, this), \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [questions[0], /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"question1\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [questions[1], /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"question2\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Analyzing...' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Prediction: \", response]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(CausePrediction, \"FIK5qJfkcJaa/MGseMxgwrCwhz4=\");\n_c = CausePrediction;\nexport default CausePrediction;\nvar _c;\n$RefreshReg$(_c, \"CausePrediction\");","map":{"version":3,"names":["React","useState","GoogleGenAI","jsxDEV","_jsxDEV","ai","apiKey","styles","container","textAlign","padding","fontFamily","color","backgroundImage","backgroundSize","backgroundPosition","minHeight","paddingTop","header","position","top","left","right","zIndex","fontSize","fontWeight","background","boxShadow","CausePrediction","diseaseName","_s","response","setResponse","loading","setLoading","handleSubmit","e","preventDefault","question1","target","elements","value","question2","prompt","result","models","generateContent","model","contents","text","error","console","specificQuestions","questions","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/varsh/OneDrive/Desktop/71/skin/src/components/CausePrediction.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { GoogleGenAI } from '@google/genai';\r\n\r\nconst ai = new GoogleGenAI({ apiKey: 'YOUR_API_KEY' }); // Replace with your actual API key\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    padding: '20px',\r\n    fontFamily: 'Arial, sans-serif',\r\n    color: 'white',\r\n    backgroundImage: 'url(\"/1.jpg\")',\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    minHeight: '100vh',\r\n    paddingTop: '80px', // Add padding to account for the fixed header\r\n  },\r\n  header: {\r\n    position: 'fixed', // Make the header fixed\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    zIndex: 1000, // Ensure it stays above other content\r\n    fontSize: '2rem',\r\n    fontWeight: 'bold',\r\n    color: '#61dafb',\r\n    background: 'rgba(0, 0, 0, 0.8)', // Semi-transparent background\r\n    padding: '15px',\r\n    textAlign: 'center',\r\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.5)',\r\n  },\r\n};\r\n\r\nfunction CausePrediction({ diseaseName }) {\r\n  const [response, setResponse] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setResponse(null);\r\n\r\n    const question1 = e.target.elements.question1.value;\r\n    const question2 = e.target.elements.question2.value;\r\n\r\n    const prompt = `\r\n      Disease: ${diseaseName}\r\n      Question 1: ${question1}\r\n      Question 2: ${question2}\r\n      Based on the above information, identify potential causes for the disease.\r\n    `;\r\n\r\n    try {\r\n      const result = await ai.models.generateContent({\r\n        model: 'gemini-1.5',\r\n        contents: [prompt],\r\n      });\r\n\r\n      if (result.text) {\r\n        setResponse(result.text);\r\n      } else {\r\n        setResponse('No potential causes identified. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error communicating with Gemini:', error);\r\n      setResponse('An error occurred while identifying potential causes. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const specificQuestions = {\r\n    \"Tinea corporis (Ringworm)\": [\r\n      \"Have you been in contact with someone who has ringworm?\",\r\n      \"Have you been using public showers or locker rooms recently?\",\r\n    ],\r\n    \"Eczema\": [\r\n      \"Have you been exposed to any known allergens or irritants?\",\r\n      \"Is your skin often dry and itchy?\",\r\n    ],\r\n    \"Psoriasis\": [\r\n      \"Have you experienced recent stress or illness?\",\r\n      \"Do you have a family history of psoriasis?\",\r\n    ],\r\n    \"Acne\": [\r\n      \"Have you been using any new skincare products or makeup?\",\r\n      \"Do you have a diet high in sugary or processed foods?\",\r\n    ],\r\n    // Add more disease-specific questions here\r\n  };\r\n\r\n  const questions = specificQuestions[diseaseName] || [\r\n    \"Have you noticed any recent changes in your skin?\",\r\n    \"Do you have any known allergies?\",\r\n  ];\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <header style={styles.header}>\r\n        <h2>Cause Prediction</h2>\r\n      </header>\r\n      <p>Answer the following questions to help us predict potential causes of your skin condition, <strong>{diseaseName}</strong>:</p>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          {questions[0]}\r\n          <input type=\"text\" name=\"question1\" required />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          {questions[1]}\r\n          <input type=\"text\" name=\"question2\" required />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? 'Analyzing...' : 'Submit'}\r\n        </button>\r\n      </form>\r\n      {response && <p>Prediction: {response}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CausePrediction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}